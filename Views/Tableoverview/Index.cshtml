@using ChapeauHerkansing.ViewModels.Tables
@model TableOverviewViewModel

@{
    ViewData["Title"] = "Table Overview";
}

<h2 style="font-family:Tahoma; color:darkorange">Table Overview</h2>

@if (!string.IsNullOrEmpty(Model.ErrorMessage))
{
    <div style="color:red; font-family:Tahoma; font-weight:bold; margin-bottom:15px;">
        @Model.ErrorMessage
    </div>
}

<div style="margin-bottom:20px;">
    <button type="button"
            style="font-family:Tahoma; padding:8px 12px; background-color:#007bff; color:#fff; border:none; border-radius:4px; cursor:pointer;"
            onclick="window.location.href='@Url.Action("Index", "TableOverview")'">
        Refresh
    </button>
</div>

<div style="font-family:Tahoma; margin-bottom:20px;">
    <span style="display:inline-flex; align-items:center; margin-right:15px;">
        <span style="width:16px; height:16px; background-color:#8AD2B0; display:inline-block; margin-right:5px;"></span>
        Free
    </span>
    <span style="display:inline-flex; align-items:center; margin-right:15px;">
        <span style="width:16px; height:16px; background-color:#FFB347; display:inline-block; margin-right:5px;"></span>
        Occupied
    </span>
    <span style="display:inline-flex; align-items:center; margin-right:15px;">
        <span style="width:16px; height:16px; background-color:#FF8080; display:inline-block; margin-right:5px;"></span>
        Reserved
    </span>
</div>

<div style="display:flex; flex-wrap:wrap; gap:10px;">
    @foreach (var table in Model.Tables)
    {
        var color = table.Status switch
        {
            TableStatus.Free => "background-color:#8AD2B0;",
            TableStatus.Occupied => "background-color:#FFB347;",
            TableStatus.Reserved => "background-color:#FF8080;",
            _ => "background-color:#C4C4C4;"
        };
        var ready = Model.ReadyOrderCounts.ContainsKey(table.TableID)
        ? Model.ReadyOrderCounts[table.TableID]
        : 0;
        <div style="position:relative; text-align:center; width:100px;">
            <button type="button"
                    style="width:100px; height:100px; font-family:Tahoma; font-weight:bold; @color; border:none; border-radius:8px;"
                    onclick="openStatusModal(@table.TableID, '@table.Status')">
                Table @table.TableID
                @if (ready > 0)
                {
                    <span style="position:absolute; top:-5px; right:-5px; background:red; color:white; border-radius:50%; padding:4px 8px; font-size:12px; font-family:Tahoma;">
                        @ready
                    </span>
                }
            </button>

           

            <p style="font-family:Tahoma; font-size:12px; margin-top:6px; color:#333;">
                Order status:
                    @{
                        var statuses = Model.RunningOrderStatuses.ContainsKey(table.TableID)
                        ? Model.RunningOrderStatuses[table.TableID]
                        : new List<string>();
                        // filter 'none' uit de lijst
                        var meaningful = statuses
                        .Where(s => !s.Equals("none", StringComparison.OrdinalIgnoreCase))
                        .ToList();
                    }
                    @* Als tafel vrij is, of alleen nog 'none' overblijft, toon italic none *@
                    @if (table.Status == TableStatus.Free || !meaningful.Any())
                    {
                    <em>none</em>
                    }
                    else
                    {
                        @string.Join(", ", meaningful)
                    }
            </p>

         

            @if (statuses.Any(s => s.Equals("Ready", StringComparison.OrdinalIgnoreCase)))

            {
                <form asp-action="ServeOrders" method="post" style="margin-top:5px;">
                    <input type="hidden" name="tableId" value="@table.TableID" />
                    <button type="submit"
                            style="background-color:#8AD2B0; border:none; padding:6px 8px; border-radius:6px; font-size:12px; font-family:Tahoma; cursor:pointer;">
                        Mark as served
                    </button>
                </form>
            }

        </div>

    }
</div>

<style>
    .modal-overlay {
        display: none;
        position: fixed;
        inset: 0;
        background: rgba(0,0,0,.55);
        align-items: center;
        justify-content: center;
        z-index: 1050;
    }

    .modal-card {
        background: #fff;
        padding: 24px;
        border-radius: 10px;
        width: 320px;
        font-family: Tahoma;
        box-shadow: 0 8px 24px rgba(0,0,0,.15);
    }

    .modal-actions {
        display: flex;
        gap: 8px;
        justify-content: center
    }

    .btn {
        padding: 8px 16px;
        border: none;
        border-radius: 6px;
        font-family: Tahoma;
        font-size: 14px;
        cursor: pointer;
        transition: opacity .15s;
    }

        .btn:hover {
            opacity: .85
        }

    .btn-primary {
        background: #007bff;
        color: #fff
    }

    .btn-outline {
        background: #fff;
        color: #333;
        border: 2px solid #333
    }

    .btn-success {
        background: #28a745;
        color: #fff
    }

    .btn-block {
        width: 100%;
        margin-top: 18px
    }
</style>

<div id="statusModal" class="modal-overlay">
    <div class="modal-card">
        <h3 id="modalHeader" style="margin-top:0;margin-bottom:18px;">
            Change Table Status – Table <span id="modalTableNumber"></span>
        </h3>
        <form asp-controller="TableOverview" asp-action="SetTableStatus" method="post">
            <input type="hidden" id="modalTableId" name="tableId" />

            <div class="mb-3" style="margin-bottom:18px;">
                <label><input type="radio" name="newStatus" value="Free"> Free</label><br>
                <label><input type="radio" name="newStatus" value="Occupied"> Occupied</label><br>
                <label><input type="radio" name="newStatus" value="Reserved"> Reserved</label>
            </div>

            <div class="modal-actions">
                <button type="button" class="btn btn-outline" onclick="closeStatusModal()">Cancel</button>
                <button type="submit" class="btn btn-primary">Save</button>
            </div>
        </form>

        <button type="button" class="btn btn-success btn-block" onclick="goToOrders()">
            Take an order for this table
        </button>
    </div>
</div>


@section Scripts {
    <script>
        function openStatusModal(id, current) {
            document.getElementById('modalTableId').value = id;
             document.getElementById('modalTableNumber').textContent = id;
            var radios = document.getElementsByName('newStatus');
            radios.forEach(r => r.checked = r.value === current);
            document.getElementById('statusModal').style.display = 'flex';
        }
        function closeStatusModal() {
            document.getElementById('statusModal').style.display = 'none';
        }
            function goToOrders() {
            var tableId = document.getElementById('modalTableId').value;
            window.location.href = '/Order/Index?tableId=' + tableId;
        }


    </script>
}